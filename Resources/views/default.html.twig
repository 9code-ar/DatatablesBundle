{% block sg_datatable %}

    {% block sg_datatable_html %}

        <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="{{ tableId }}">
            <thead>
            </thead>
            {% if individualFiltering == true %}
                <tfoot>
                {% for column in columns %}
                    <th></th>
                {% endfor %}
                {% if multiselect %}
                    <th></th>
                {% endif %}
                </tfoot>
            {% endif %}
            <tbody>
            </tbody>
        </table>

    {% endblock %}

    {% block sg_datatable_js %}

        <script>

            $(document).ready(function () {

                var selector = "#{{ tableId }}";

                var defaults = {
                    "bProcessing": true,
                    "bServerSide": true,
                    "sAjaxSource": "{{ path(sAjaxSource) }}",
                    "fnServerData": function (sSource, aoData, fnCallback) {
                        {% set counter = 0 %}
                        {% for column in columns %}
                            aoData.push( { "name": "dql_{{ counter }}", "value": "{{ column.name }}" } );
                        {% set counter = counter + 1 %}
                        {% endfor %}
                        {% set counter = counter - 1 %}
                        aoData.push( { "name": "dql_counter", "value": "{{ counter }}" } );
                        $.getJSON( sSource, aoData, function (json) {
                            fnCallback(json)
                        } );
                    },
                    "sDom": "<'row'<'{{ sDomOptions.sDomLength }}'l><'{{ sDomOptions.sDomFilter }}'f>r>t<'row'<'{{ sDomOptions.sDomInfo }}'i><'{{ sDomOptions.sDomPagination }}'p>>",
                    "sPaginationType": "bootstrap",
                    "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "{{ 'datatables.datatable.all'|trans({}, 'messages') }}"]],
                    "iDisplayLength": {{ iDisplayLength }},
                    "oLanguage": {
                        "sProcessing": "<img src='{{ asset('bundles/sgdatatables/img/loader.gif') }}' style='margin-left: 20px; margin-bottom: 5px;' />" + " {{ 'datatables.datatable.sProcessing'|trans({}, 'messages') }}",
                        "sLengthMenu": "{{ 'datatables.datatable.sLengthMenu'|trans({}, 'messages') }}",
                        "sZeroRecords": "{{ 'datatables.datatable.sZeroRecords'|trans({}, 'messages') }}",
                        "sInfo": "{{ 'datatables.datatable.sInfo'|trans({}, 'messages') }}",
                        "sInfoEmpty": "{{ 'datatables.datatable.sInfoEmpty'|trans({}, 'messages') }}",
                        "sInfoFiltered": "{{ 'datatables.datatable.sInfoFiltered'|trans({}, 'messages') }}",
                        "sInfoPostFix": "{{ 'datatables.datatable.sInfoPostFix'|trans({}, 'messages') }}",
                        "sSearch": "{{ 'datatables.datatable.sSearch'|trans({}, 'messages') }}",
                        "sUrl": "",
                        "oPaginate": {
                            "sFirst": "{{ 'datatables.datatable.sFirst'|trans({}, 'messages') }}",
                            "sPrevious": "{{ 'datatables.datatable.sPrevious'|trans({}, 'messages') }}",
                            "sNext": "{{ 'datatables.datatable.sNext'|trans({}, 'messages') }}",
                            "sLast": "{{ 'datatables.datatable.sLast'|trans({}, 'messages') }}"
                        }
                    }
                };

                $.extend(defaults, {
                    "aoColumns": [
                        {# columns #}
                        {% for column in columns %}
                            {% if column.getClassId == 'action' %}
                                {% include "SgDatatablesBundle:Column:action.html.twig" %}
                            {% endif %}
                            {% if column.getClassId == 'array' %}
                                {% include "SgDatatablesBundle:Column:array.html.twig" %}
                            {% endif %}
                            {% if column.getClassId == 'boolean' %}
                                {% include "SgDatatablesBundle:Column:boolean.html.twig" %}
                            {% endif %}
                            {% if column.getClassId == 'column' %}
                                {% include "SgDatatablesBundle:Column:column.html.twig" %}
                            {% endif %}
                            {% if column.getClassId == 'datetime' %}
                                {% include "SgDatatablesBundle:Column:datetime.html.twig" %}
                            {% endif %}
                        {% endfor %}

                        {# multiselect column #}
                        {% if multiselect %}
                            {
                                "sTitle": "<input type='checkbox' name='select_all_checkbox' id='select_all_checkbox' />",
                                "mData": null,
                                "mRender": function(data, type, full) {
                                    if (type != "display")
                                        return data;

                                    return "<input type='checkbox' name='select_column_checkbox' value='" + full.id + "' class='select_column_checkbox' />";
                                },
                                "bSortable": false,
                                "bSearchable": false
                            }
                        {% endif %}
                    ]
                });

                var oTable;
                {% if individualFiltering == true %}
                    oTable = $(selector).dataTable(defaults).columnFilter(
                        {
                            aoColumns: [
                                {% for column in columns %}
                                    {% if column.bSearchable == true %}
                                        {
                                            type: "text",
                                            bRegex: true,
                                            bSmart: true
                                        },
                                    {% else %}
                                        null,
                                    {% endif %}
                                {% endfor %}
                            ]
                        }
                    );
                {% else %}
                    oTable = $(selector).dataTable(defaults);
                {% endif %}

                var anOpen = [];

                $(selector).on("click", "td.details_control", function () {
                    var nTr = this.parentNode;
                    var i = $.inArray(nTr, anOpen);

                    if (i === -1) {
                        $("i", this).attr("class", "icon-minus");
                        oTable.fnOpen(nTr, getDetails(oTable, nTr), "details");
                        anOpen.push(nTr);
                    }
                    else {
                        $("i", this).attr("class", "icon-plus");
                        oTable.fnClose(nTr);
                        anOpen.splice(i, 1);
                    }
                });

                function getDetails(oTable, nTr) {
                    return "Test";
                }

                {% if multiselect %}
                    var multiple_html = "\
                        <p>\
                            <select name='bulk_action_routes[select]'>\
                                {% for key, value in bulkActions %}\
                                    <option value='{{ path(value) }}'>{{ key }}</option>\
                                {% endfor %}\
                            </select>\
                            <button id='bulk_action_routes_button' type='button' class='btn'>OK</button>\
                        </p>";

                    $(".pagination").append(multiple_html);

                    $("#select_all_checkbox").click(function(event) {
                        if(this.checked) {
                            $("input:checkbox.select_column_checkbox").each(function() {
                                this.checked = true;
                            });
                        } else {
                            $("input:checkbox.select_column_checkbox").each(function() {
                                this.checked = false;
                            });
                        }
                    });

                    $("#bulk_action_routes_button").click(function() {
                        var length = $("input:checkbox:checked.select_column_checkbox").length;

                        if (length > 0) {
                            if (!confirm( "{{ 'datatables.bulk.confirmMsg'|trans({}, 'messages') }}" )) {
                                return;
                            }

                            $.ajax({
                                url: $("select[name='bulk_action_routes[select]']").val(),
                                type: "POST",
                                cache: false,
                                data: {
                                    'data': $("input:checkbox:checked.select_column_checkbox", oTable.fnGetNodes()).serializeArray()
                                },
                                success: function(msg) {
                                    oTable.fnDraw();
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    console.log(XMLHttpRequest + ' ' + textStatus + ' ' +errorThrown);
                                }
                            })
                        } else {
                            alert("{{ 'datatables.bulk.selectError'|trans({}, 'messages') }}");
                        }

                    });
                {% endif %}

            });

        </script>

    {% endblock %}

    {% block sg_datatable_render_functions %}

        <script>

            function render_boolean_icons(data, type, full) {
                if (type != "display")
                    return data;

                if (data == true) {
                    return "<i class='icon-ok'></i>";
                } else {
                    return "<i class='icon-remove'></i>";
                }
            }

            function render_plus_icon(data, type, full) {
                if (type != "display")
                    return data;

                return "<i class='icon-plus'></i>";
            }

        </script>

    {% endblock %}

{% endblock  %}