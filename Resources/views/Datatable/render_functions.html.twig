<script>

    function render_boolean(data, type, row, meta, trueIcon, falseIcon, trueLabel, falseLabel) {
        if ("" == trueIcon && "" == trueLabel) {
            trueLabel = "true";
        }

        if ("" == falseIcon && "" == falseLabel) {
            falseLabel = "false";
        }

        if (data == true) {
            return "<span class='" + trueIcon + "'></span> " + trueLabel;
        } else {
            return "<span class='" + falseIcon + "'></span> " + falseLabel;
        }
    }

    function render_datetime(data, type, row, meta, dateFormat) {
        if (data != null && typeof data.timestamp != "undefined") {
            moment.locale("{{ app.request.locale }}");
            return moment.unix(data.timestamp).format(dateFormat);
        } else {
            return null;
        }
    }

    function render_timeago(data, type, row, meta) {
        if (data != null && typeof data.timestamp != "undefined") {
            moment.locale("{{ app.request.locale }}");
            return moment.unix(data.timestamp).fromNow();
        } else {
            return null;
        }
    }

    {% include 'pipeline.js' %}

    // Register an API method that will empty the pipelined data, forcing an Ajax
    // fetch on the next draw (i.e. `table.clearPipeline().draw()`)
    $.fn.dataTable.Api.register( 'clearPipeline()', function () {
        return this.iterator( 'table', function ( settings ) {
            settings.clearCache = true;
        } );
    } );

</script>
