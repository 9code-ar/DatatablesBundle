{% block sg_datatable %}

    {% block sg_datatable_html %}

        <table cellpadding="0" cellspacing="0" border="0" class="{{ theme_tableClasses }}" id="{{ dt_tableId }}" width="100%">
            <thead>
            </thead>
                {% if dt_individualFiltering %}
                    <tfoot>
                        {% for column in dt_columns %}
                            <th>
                                {% if column.bSearchable %}
                                    <input type="text" class="{{ theme_formClasses }}" placeholder="{{ column.sTitle }}" />
                                {% else %}
                                    <input type="hidden" />
                                {% endif %}
                            </th>
                        {% endfor %}
                        {% if dt_multiselect.enabled %}
                            <th></th>
                        {% endif %}
                    </tfoot>
                {% endif %}
            <tbody>
            </tbody>
        </table>

    {% endblock %}

    {% block sg_datatable_js %}

        <script>

            $(document).ready(function () {

                var selector = "#{{ dt_tableId }}";

                var defaults = {
                    {% if dt_bProcessing %}
                        "bProcessing": true,
                    {% else %}
                        "bProcessing": false,
                    {% endif %}
                    {% if dt_bServerSide %}
                        "bServerSide": true,
                        "sAjaxSource": "{{ dt_sAjaxSource }}",
                        "fnServerParams": function(aoData) {
                            {% set counter = 0 %}
                            {% for column in dt_columns %}
                                aoData.push( { "name": "dql_{{ counter }}", "value": "{{ column.property }}" } );
                                {% set counter = counter + 1 %}
                            {% endfor %}
                            {% set counter = counter - 1 %}
                            aoData.push( { "name": "dql_counter", "value": "{{ counter }}" } );
                        },
                    {% else %}
                        "aaData": {{ dt_aaData|raw }},
                    {% endif %}
                    {% if theme_pagination %}
                        "sPaginationType": "{{ theme_pagination }}",
                    {% endif %}
                    {% if theme_sDom %}
                        "sDom": "{{ theme_sDom|raw }}",
                    {% endif %}
                    "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "{{ 'datatables.datatable.all'|trans({}, 'messages') }}"]],
                    "iDisplayLength": {{ dt_iDisplayLength }},
                    {% if 'jqueryui_datatable_theme' == theme_name %}
                        "bJQueryUI": true,
                    {% endif %}
                    "oLanguage": {
                        "sProcessing": "{{ 'datatables.datatable.sProcessing'|trans({}, 'messages') }}",
                        "sLengthMenu": "{{ 'datatables.datatable.sLengthMenu'|trans({}, 'messages') }}",
                        "sZeroRecords": "{{ 'datatables.datatable.sZeroRecords'|trans({}, 'messages') }}",
                        "sInfo": "{{ 'datatables.datatable.sInfo'|trans({}, 'messages') }}",
                        "sInfoEmpty": "{{ 'datatables.datatable.sInfoEmpty'|trans({}, 'messages') }}",
                        "sInfoFiltered": "{{ 'datatables.datatable.sInfoFiltered'|trans({}, 'messages') }}",
                        "sInfoPostFix": "{{ 'datatables.datatable.sInfoPostFix'|trans({}, 'messages') }}",
                        "sSearch": "{{ 'datatables.datatable.sSearch'|trans({}, 'messages') }}",
                        "sUrl": "",
                        "oPaginate": {
                            "sFirst": "{{ 'datatables.datatable.sFirst'|trans({}, 'messages') }}",
                            "sPrevious": "{{ 'datatables.datatable.sPrevious'|trans({}, 'messages') }}",
                            "sNext": "{{ 'datatables.datatable.sNext'|trans({}, 'messages') }}",
                            "sLast": "{{ 'datatables.datatable.sLast'|trans({}, 'messages') }}"
                        }
                    }
                };

                $.extend(defaults, {
                    "aoColumns": [
                        {# multiselect column #}
                        {% if dt_multiselect.enabled %}
                            {% if 'first' == dt_multiselect.position %}
                                {% include "SgDatatablesBundle:Column:multiselect.html.twig" %}
                            {% endif %}
                        {% endif %}

                        {# columns #}
                        {% for column in dt_columns %}
                            {% include "SgDatatablesBundle:Column:" ~ column.getClassName ~ ".html.twig" %}
                        {% endfor %}

                        {# multiselect column #}
                        {% if dt_multiselect.enabled %}
                            {% if 'last' == dt_multiselect.position %}
                                {% include "SgDatatablesBundle:Column:multiselect.html.twig" %}
                            {% endif %}
                        {% endif %}
                    ]
                });

                var oTable = $(selector).dataTable(defaults);

                {% if dt_individualFiltering %}
                    $("tfoot input").keyup(function() {
                        oTable.fnFilter(this.value, $("tfoot input").index(this));
                    });
                {% endif %}

                {% if dt_multiselect.enabled %}
                    var multiple_html = "\
                        <p>\
                            <select name='bulk_action_routes[select]'>\
                                {% for key, value in dt_multiselect.actions %}\
                                    <option value='{{ path(value) }}'>{{ key }}</option>\
                                {% endfor %}\
                            </select>\
                            <button id='multiselect_submit' type='button' class='btn btn-primary'>OK</button>\
                        </p>";

                    $(".pagination").append(multiple_html);

                    $(".multiselect_checkall").click(function(event) {
                        if(this.checked) {
                            $("input:checkbox.multiselect_checkbox").each(function() {
                                this.checked = true;
                            });
                        } else {
                            $("input:checkbox.multiselect_checkbox").each(function() {
                                this.checked = false;
                            });
                        }
                    });

                    $("#multiselect_submit").click(function() {
                        var length = $("input:checkbox:checked.multiselect_checkbox").length;

                        if (length > 0) {
                            if (!confirm( "{{ 'datatables.bulk.confirmMsg'|trans({}, 'messages') }}" )) {
                                return;
                            }

                            $.ajax({
                                url: $("select[name='bulk_action_routes[select]']").val(),
                                type: "POST",
                                cache: false,
                                data: {
                                    'data': $("input:checkbox:checked.multiselect_checkbox", oTable.fnGetNodes()).serializeArray()
                                },
                                success: function(msg) {
                                    oTable.fnDraw();
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    console.log(XMLHttpRequest + ' ' + textStatus + ' ' +errorThrown);
                                }
                            })
                        } else {
                            alert("{{ 'datatables.bulk.selectError'|trans({}, 'messages') }}");
                        }
                    });
                {% endif %}

            });

        </script>

    {% endblock %}

    {% block sg_datatable_render_functions %}

        <script>

            function render_boolean_icons(data, type, full, trueIcon, falseIcon, trueLabel, falseLabel) {
                if ('' == trueIcon && '' == trueLabel) {
                    trueLabel = 'true';
                }

                if ('' == falseIcon && '' == falseLabel) {
                    falseLabel = 'false';
                }

                if (data == true) {
                    return "<span class='" + trueIcon + "'></span> " + trueLabel;
                } else {
                    return "<span class='" + falseIcon + "'></span> " + falseLabel;
                }
            }

            function render_datetime(data, type, full, localizedFormat) {
                if (typeof data.timestamp != 'undefined') {
                    moment.lang("{{ app.request.locale }}");
                    return moment.unix(data.timestamp).format(localizedFormat);
                } else {
                    return null;
                }
            }

            function render_timeago(data, type, full) {
                if (typeof data.timestamp != 'undefined') {
                    moment.lang("{{ app.request.locale }}");
                    return moment.unix(data.timestamp).fromNow();
                } else {
                    return null;
                }
            }

        </script>

    {% endblock %}

{% endblock  %}
