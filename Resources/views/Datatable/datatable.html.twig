{% block sg_datatable %}

    {% block sg_datatable_html %}

        <table cellpadding="0" cellspacing="0" class="{{ view_style }}" border="0" id="{{ view_table_id }}" width="100%">
            <thead>
            </thead>
                {% if view_individual_filtering %}
                    <tfoot>
                        {% if view_multiselect.enabled and "first" == view_multiselect.position %}
                            <th></th>
                        {% endif %}
                        {% for column in view_columns %}
                            <th>
                                {% if column.searchable %}
                                    <input type="text" class="individual_filtering" placeholder="{{ column.title }}" />
                                {% else %}
                                    <input type="hidden" />
                                {% endif %}
                            </th>
                        {% endfor %}
                        {% if view_multiselect.enabled and "last" == view_multiselect.position %}
                            <th></th>
                        {% endif %}
                    </tfoot>
                {% endif %}
            <tbody>
            </tbody>
        </table>

    {% endblock %}

    {% block sg_datatable_js %}

        <script>

            $(document).ready(function () {

                var selector = "#{{ view_table_id }}";

                var features = {
                    {% if view_features.autoWidth %}
                        "autoWidth": true,
                    {% else %}
                        "autoWidth": false,
                    {% endif %}

                    {% if view_features.deferRender %}
                        "deferRender": true,
                    {% else %}
                        "deferRender": false,
                    {% endif %}

                    {% if view_features.info %}
                        "info": true,
                    {% else %}
                        "info": false,
                    {% endif %}

                    {% if view_features.jQueryUI %}
                        "jQueryUI": true,
                    {% else %}
                        "jQueryUI": false,
                    {% endif %}

                    {% if view_features.lengthChange %}
                        "lengthChange": true,
                    {% else %}
                        "lengthChange": false,
                    {% endif %}

                    {% if view_features.ordering %}
                        "ordering": true,
                    {% else %}
                        "ordering": false,
                    {% endif %}

                    {% if view_features.paging %}
                        "paging": true,
                    {% else %}
                        "paging": false,
                    {% endif %}

                    {% if view_features.processing %}
                        "processing": true,
                    {% else %}
                        "processing": false,
                    {% endif %}

                    {% if view_features.scrollX %}
                        "scrollX": true,
                    {% else %}
                        "scrollX": false,
                    {% endif %}

                    //"scrollY": "{# view_features.scrollY #}",

                    {% if view_features.searching %}
                        "searching": true,
                    {% else %}
                        "searching": false,
                    {% endif %}

                    // serverSide -> ajax var

                    {% if view_features.stateSave %}
                        "stateSave": true,
                    {% else %}
                        "stateSave": false,
                    {% endif %}
                }

                var options = {
                    //"deferLoading": 57,

                    {% if view_options.destroy %}
                        "destroy": true,
                    {% else %}
                        "destroy": false,
                    {% endif %}

                    "displayStart": {{ view_options.displayStart }},

                    //"dom": "{# view_options.dom #}",

                    "lengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "{{ 'datatables.datatable.all'|trans({}, 'messages') }}"]],

                    {% if view_options.orderCellsTop %}
                        "orderCellsTop": true,
                    {% else %}
                        "orderCellsTop": false,
                    {% endif %}

                    {% if view_options.orderClasses %}
                        "orderClasses": true,
                    {% else %}
                        "orderClasses": false,
                    {% endif %}

                    "order": [[0, "asc"]],

                    //"orderFixed": [ 0, 'asc' ],

                    {% if view_options.orderMulti %}
                        "orderMulti": true,
                    {% else %}
                        "orderMulti": false,
                    {% endif %}

                    "pageLength": {{ view_options.pageLength }},

                    "pagingType": "{{ view_options.pagingType }}",

                    //"renderer": "bootstrap",

                    {% if view_options.retrieve %}
                        "retrieve": true,
                    {% else %}
                        "retrieve": false,
                    {% endif %}

                    {% if view_options.scrollCollapse %}
                        "scrollCollapse": true,
                    {% else %}
                        "scrollCollapse": false,
                    {% endif %}

                    // "searchCols": [],

                    // "search": {},

                    "stateDuration": {{ view_options.stateDuration }},

                    //"stripeClasses": [],

                    "tabIndex": {{ view_options.tabIndex }},
                }

                var ajax = {
                    {% if view_features.serverSide %}
                        "serverSide": true,
                        "ajax": {
                            "url": "{{ view_ajax.url }}",
                            "data": function(d) {
                                {% set counter = 0 %}
                                {% for column in view_columns %}
                                    d.dql_{{ counter }} = "{{ column.property }}";
                                    {% set counter = counter + 1 %}
                                {% endfor %}
                            },
                            "type": "{{ view_ajax.type }}"
                        },
                    {% else %}
                        "serverSide": false,
                        "data": {{ view_data|raw }},
                    {% endif %}
                }

                var defaults = {
                    "language": {
                        "processing": "{{ 'datatables.datatable.processing'|trans({}, 'messages') }}",
                        "lengthMenu": "{{ 'datatables.datatable.lengthMenu'|trans({}, 'messages') }}",
                        "zeroRecords": "{{ 'datatables.datatable.zeroRecords'|trans({}, 'messages') }}",
                        "info": "{{ 'datatables.datatable.info'|trans({}, 'messages') }}",
                        "infoEmpty": "{{ 'datatables.datatable.infoEmpty'|trans({}, 'messages') }}",
                        "sInfoFiltered": "{{ 'datatables.datatable.infoFiltered'|trans({}, 'messages') }}",
                        "infoPostFix": "{{ 'datatables.datatable.infoPostFix'|trans({}, 'messages') }}",
                        "search": "{{ 'datatables.datatable.search'|trans({}, 'messages') }}",
                        "url": "",
                        "paginate": {
                            "first": "{{ 'datatables.datatable.first'|trans({}, 'messages') }}",
                            "previous": "{{ 'datatables.datatable.previous'|trans({}, 'messages') }}",
                            "next": "{{ 'datatables.datatable.next'|trans({}, 'messages') }}",
                            "last": "{{ 'datatables.datatable.last'|trans({}, 'messages') }}"
                        }
                    }
                }

                var columns = {
                    "columns": [
                        {% if view_multiselect.enabled %}
                            {% if "first" == view_multiselect.position %}
                                {% include "SgDatatablesBundle:Column:multiselect.html.twig" %}
                            {% endif %}
                        {% endif %}

                        {% for column in view_columns %}
                            {% include "SgDatatablesBundle:Column:" ~ column.getColumnClassName ~ ".html.twig" %}
                        {% endfor %}

                        {% if view_multiselect.enabled %}
                            {% if "last" == view_multiselect.position %}
                                {% include "SgDatatablesBundle:Column:multiselect.html.twig" %}
                            {% endif %}
                        {% endif %}
                    ]
                }

                $.extend(defaults, features);
                $.extend(defaults, options);
                $.extend(defaults, ajax);
                $.extend(defaults, columns);

                var oTable = $(selector).DataTable(defaults);

                {% if view_individual_filtering %}
                    $("tfoot input.individual_filtering").on("keyup change", function() {
                        oTable
                            .column( $(this).parent().index()+':visible' )
                            .search( this.value )
                            .draw();
                    });
                {% endif %}

                {% if view_multiselect.enabled %}
                    var multiple_html = "\
                        <p>\
                            <select name='bulk_action_routes[select]'>\
                                {% for key, value in view_multiselect.actions %}\
                                    <option value='{{ path(value) }}'>{{ key }}</option>\
                                {% endfor %}\
                            </select>\
                            <button id='multiselect_submit' type='button'>Ok</button>\
                        </p>";

                    $("#{{ view_table_id }}" + "_wrapper").append(multiple_html);

                    $(".multiselect_checkall").click(function(event) {
                        if(this.checked) {
                            $("input:checkbox.multiselect_checkbox").each(function() {
                                this.checked = true;
                            });
                        } else {
                            $("input:checkbox.multiselect_checkbox").each(function() {
                                this.checked = false;
                            });
                        }
                    });

                    $("#multiselect_submit").click(function() {
                        var length = $("input:checkbox:checked.multiselect_checkbox").length;

                        if (length > 0) {
                            if (!confirm( "{{ 'datatables.bulk.confirmMsg'|trans({}, 'messages') }}" )) {
                                return;
                            }

                            $.ajax({
                                url: $("select[name='bulk_action_routes[select]']").val(),
                                type: "POST",
                                cache: false,
                                data: {
                                    'data': $("input:checkbox:checked.multiselect_checkbox", oTable.rows().nodes()).serializeArray()
                                },
                                success: function(msg) {
                                    oTable.draw();
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    console.log(XMLHttpRequest + ' ' + textStatus + ' ' +errorThrown);
                                }
                            })
                        } else {
                            alert("{{ 'datatables.bulk.selectError'|trans({}, 'messages') }}");
                        }
                    });
                {% endif %}

            });

        </script>

    {% endblock %}

    {% block sg_datatable_render_functions %}

        <script>

            function render_boolean_icons(data, type, row, meta, trueIcon, falseIcon, trueLabel, falseLabel) {
                if ("" == trueIcon && "" == trueLabel) {
                    trueLabel = "true";
                }

                if ("" == falseIcon && "" == falseLabel) {
                    falseLabel = "false";
                }

                if (data == true) {
                    return "<span class='" + trueIcon + "'></span> " + trueLabel;
                } else {
                    return "<span class='" + falseIcon + "'></span> " + falseLabel;
                }
            }

            function render_datetime(data, type, row, meta, localizedFormat) {
                if (typeof data.timestamp != "undefined") {
                    moment.lang("{{ app.request.locale }}");
                    return moment.unix(data.timestamp).format(localizedFormat);
                } else {
                    return null;
                }
            }

            function render_timeago(data, type, row, meta) {
                if (typeof data.timestamp != "undefined") {
                    moment.lang("{{ app.request.locale }}");
                    return moment.unix(data.timestamp).fromNow();
                } else {
                    return null;
                }
            }

        </script>

    {% endblock %}

{% endblock  %}
